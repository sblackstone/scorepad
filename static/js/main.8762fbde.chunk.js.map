{"version":3,"sources":["player_scores.js","score_form.js","score_pad.js","App.js","serviceWorker.js","index.js"],"names":["capitalize","str","charAt","toUpperCase","slice","PlayerName","props","react_default","a","createElement","className","name","ScoreRows","_this","this","total","scores","map","score","i","key","outcome","bonus","Component","PlayerScores","player_scores_ScoreRows","ScoreOptions","opts","push","ScoreForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleSubmit","bind","assertThisInitialized","handleChange","resetState","setState","event","_this2","target","value","type","checked","new_state","defineProperty","parseFloat","preventDefault","objectSpread","onSubmit","onChange","e","ScorePad","doug","stephen","new_rec","_this$setState","other_name","concat","toConsumableArray","console","log","reactstrap_es","src_score_form","newRecord","src_player_scores","App","src_score_pad","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8762fbde.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './player_scores.scss';\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nfunction PlayerName(props) {\n  return (\n    <h5 className='text-center'>{capitalize(props.name)}</h5>\n  )\n}\n\n\n\nclass ScoreRows extends Component {\n  \n\n  render() {\n    this.total = 0;\n    return this.props.scores.map((score,i) => {\n      this.total += score.total;\n      return (\n        <tr key={i}>\n          <td className=\"text-center\">{i+1}</td>\n          <td className=\"text-center\">{score.score}</td>\n          <td className=\"text-center\">{capitalize(score.outcome)}</td>\n          <td className=\"text-center\">{score.bonus}</td>\n          <td className=\"text-center\">{score.total}</td>\n          <td className=\"text-center\">{this.total}</td>\n        </tr>\n      )\n    });    \n  }\n}\n\n\n\nfunction PlayerScores(props) {\n  return (\n    <div className=\"ScoresTable\">\n      <PlayerName name={props.name} />\n      <table className='table table-striped table-responsive'>\n        <thead>\n          <tr>\n            <th className=\"text-center\">Round</th>\n            <th className=\"text-left\">Score</th>\n            <th className=\"text-center\">Outcome</th>\n            <th className=\"text-center\">Bonus</th>\n            <th className=\"text-center\">Round</th>\n            <th className=\"text-center\">Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          <ScoreRows scores={props.scores} />\n        </tbody>\n      </table>    \n    </div>\n  )\n}\n\n\nexport default PlayerScores;","import React, { Component } from 'react';\nimport './score_form.scss';\n\n\nfunction capitalize(str) {\n  try {\n    return str.charAt(0).toUpperCase() + str.slice(1);    \n  } catch(e) {\n    return str;\n  }\n}\n\nfunction ScoreOptions() {\n  const opts = []\n  for (let i = 1; i < 100; i++) {\n    opts.push(<option>{i}</option>)\n  }\n  return(opts);  \n}\n\nclass ScoreForm extends Component { \n  \n  constructor(props) {\n    super(props)\n    this.state = {};\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  \n  componentDidMount() {\n    this.resetState();\n  }\n\n  resetState() {\n    this.setState({\n      name: \"doug\",\n      score: 1,\n      outcome: \"knock\",\n      bonus: 0,\n      total: 1\n    });    \n  }\n  \n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    const new_state = {\n      [name]: value      \n    }\n\n    if (name === \"outcome\") {\n      switch(value) {\n      case \"under_cut\":\n      case \"gin\":\n        new_state[\"bonus\"] = 25;\n        break;\n      case \"big_gin\":\n        new_state[\"bonus\"] = 31;\n        break;\n      default: \n        new_state[\"bonus\"] = 0;\n      }  \n    }\n    \n    if (name === \"score\") {\n      new_state[\"score\"] = parseFloat(value);\n    }\n    \n        \n    this.setState(new_state, ()=> {\n      this.setState((state, props) => ({\n        total: state.score + state.bonus\n      }));\n\n    });\n  }\n  \n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.handleSubmit({...this.state});\n    this.resetState();\n  }\n  \n  render(props) {\n    return(\n      <form className='ScoreForm' onSubmit={this.handleSubmit}>\n        <div className='form-group'>\n          <label>Winner</label>\n          <select className='form-control' name=\"name\" value={this.state.name} onChange={this.handleChange}>\n            <option value=\"doug\">Doug</option>\n            <option value=\"stephen\">Stephen</option>\n          </select>\n        </div>\n\n        <div className='form-group'>\n          <label>Score</label>\n          <select className='form-control' name=\"score\" value={this.state.score} onChange={this.handleChange}>\n            <ScoreOptions />\n          </select>\n        </div>\n\n        <div className='form-group'>\n          <label>Outcome</label>\n          <select className='form-control' name=\"outcome\" onChange={this.handleChange} value={this.state.outcome}>\n            <option value=\"knock\">Knock</option>\n            <option value=\"gin\">Gin (+25pts)</option>\n            <option value=\"big_gin\">Big Gin (+31pts)</option>\n            <option value=\"under_cut\">Under Cut (+25pts)</option>\n          </select>\n        </div>\n        <h5 className='text-center'>{capitalize(this.state.name)}'s Score</h5>\n        <h5 className='text-center'>{this.state.total}</h5>\n        <input type=\"submit\" value=\"Save\" className='btn btn-primary d-flex m-auto' />\n\n      </form>\n    )\n  } \n}\n\n\nexport default ScoreForm;","import React, { Component } from 'react';\nimport './score_pad.scss';\nimport { Container } from 'reactstrap';\nimport PlayerScores from './player_scores';\nimport ScoreForm from './score_form'\n\nclass ScorePad extends Component {\n  \n  constructor(props) {\n    super(props);    \n    this.state = {\n      doug: [],\n      stephen: []\n    }\n    \n    \n  }\n  \n  handleSubmit(new_rec) {\n    const name = new_rec[\"name\"];\n    const other_name = new_rec[\"name\"] === \"stephen\" ? \"doug\" : \"stephen\";\n    \n    this.setState({\n        [name]:       [ ...this.state[name], new_rec  ],\n        [other_name]: [ ...this.state[other_name], { score: 0, outcome: \"Loss\", bonus: 0, total: 0 } ]\n    });\n    \n    console.log(new_rec);\n  }\n  \n  render() {\n    \n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    return(\n      <Container>\n        <div className=\"d-flex flew-row\">\n          <div className=\"d-flex column p-3 flex-fill\">\n            <ScoreForm handleSubmit={this.handleSubmit} newRecord={this.newRecord} />\n          </div>\n          <div className=\"d-flex column p-3 flex-fill\">\n            <PlayerScores name=\"stephen\" scores={this.state.stephen}/>\n          </div>\n          <div className=\"d-flex column p-3 flex-fill\">\n            <PlayerScores name=\"doug\" scores={this.state.doug} />\n          </div>\n        </div>\n      </Container>\n    )\n  }  \n}\n\n\nexport default ScorePad;","import React, { Component } from 'react';\nimport './App.scss';\nimport ScorePad from './score_pad';\n\nclass App extends Component {\n  render() {\n    return (\n      <ScorePad />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// comment.\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}